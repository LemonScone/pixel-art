import { rest } from "msw";
import { VALID_USER, VALID_TOKEN, INVALID_USER } from "../fixtures/auth";

import httpStatus from "../../constants/httpStatus";
import { GRID_EXAMPLE_1, GRID_EXAMPLE_2 } from "../fixtures/grid";

const handlers = [
  rest.post("/api/auth/signin", async (req, res, ctx) => {
    const { email, password } = await req.json();

    if (email === VALID_USER.email && password === VALID_USER.password) {
      return res(
        ctx.status(httpStatus.OK),
        ctx.json({
          email: VALID_USER.email,
          accessToken: VALID_TOKEN,
          username: VALID_USER.username,
          current: VALID_USER.current,
          provider: VALID_USER.provider,
          expired: 180000,
        })
      );
    } else {
      return res(
        ctx.status(httpStatus.UNAUTHORIZED),
        ctx.json({
          message: "Sorry, we can't find an account with this email.",
        })
      );
    }
  }),

  rest.post("/api/auth/signout", async (_, res, ctx) => {
    return res(ctx.status(httpStatus.OK));
  }),

  rest.post("/api/auth/refresh", async (_, res, ctx) => {
    return res(
      ctx.status(httpStatus.OK),
      ctx.json({
        email: "",
        accessToken: "",
        username: "",
        current: "",
        provider: "",
        expired: 180000,
      })
    );
  }),

  rest.get("/api/projects", async (_, res, ctx) => {
    return res(
      ctx.status(httpStatus.OK),
      ctx.json([
        {
          id: 1,
          userId: 1,
          animate: 0,
          cellSize: 10,
          gridColumns: 20,
          gridRows: 20,
          pallete: [
            "rgb(0, 0, 0)",
            "rgb(85, 239, 196)",
            "rgb(129, 236, 236)",
            "rgb(116, 185, 255)",
            "rgb(162, 155, 254)",
            "rgb(178, 190, 195)",
            "rgb(108, 92, 231)",
            "rgb(9, 132, 227)",
            "rgb(0, 206, 201)",
            "rgb(0, 184, 148)",
            "rgb(255, 234, 167)",
            "rgb(250, 177, 160)",
            "rgb(255, 118, 117)",
            "rgb(253, 121, 168)",
            "rgb(99, 110, 114)",
            "rgb(45, 52, 54)",
            "rgb(232, 67, 147)",
            "rgb(214, 48, 49)",
            "rgb(225, 112, 85)",
          ],
          title: "untitled",
          description: null,
          isPublished: 0,
          frames: [
            {
              projectId: 1,
              id: 1,
              grid: [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(139, 195, 74)",
                "rgb(139, 195, 74)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(255, 255, 255)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "rgb(0, 0, 0)",
                "",
                "",
              ],
              animateInterval: 10,
            },
          ],
        },
        {
          id: 2,
          userId: 1,
          animate: 0,
          cellSize: 10,
          gridColumns: 20,
          gridRows: 20,
          pallete: [
            "rgb(0, 0, 0)",
            "rgb(85, 239, 196)",
            "rgb(129, 236, 236)",
            "rgb(116, 185, 255)",
            "rgb(162, 155, 254)",
            "rgb(178, 190, 195)",
            "rgb(108, 92, 231)",
            "rgb(9, 132, 227)",
            "rgb(0, 206, 201)",
            "rgb(0, 184, 148)",
            "rgb(255, 234, 167)",
            "rgb(250, 177, 160)",
            "rgb(255, 118, 117)",
            "rgb(253, 121, 168)",
            "rgb(99, 110, 114)",
            "rgb(45, 52, 54)",
            "rgb(232, 67, 147)",
            "rgb(214, 48, 49)",
            "rgb(225, 112, 85)",
          ],
          title: "untitled 2",
          description: null,
          isPublished: 0,
          frames: [
            {
              projectId: 2,
              id: 2,
              grid: GRID_EXAMPLE_1,
              animateInterval: null,
            },
          ],
        },
        {
          id: 3,
          userId: 1,
          animate: 0,
          cellSize: 10,
          gridColumns: 20,
          gridRows: 20,
          pallete: [
            "rgb(0, 0, 0)",
            "rgb(85, 239, 196)",
            "rgb(129, 236, 236)",
            "rgb(116, 185, 255)",
            "rgb(162, 155, 254)",
            "rgb(178, 190, 195)",
            "rgb(108, 92, 231)",
            "rgb(9, 132, 227)",
            "rgb(0, 206, 201)",
            "rgb(0, 184, 148)",
            "rgb(255, 234, 167)",
            "rgb(250, 177, 160)",
            "rgb(255, 118, 117)",
            "rgb(253, 121, 168)",
            "rgb(99, 110, 114)",
            "rgb(45, 52, 54)",
            "rgb(232, 67, 147)",
            "rgb(214, 48, 49)",
            "rgb(225, 112, 85)",
          ],
          title: "untitled 3",
          description: null,
          isPublished: 0,
          frames: [
            {
              projectId: 3,
              id: 3,
              grid: GRID_EXAMPLE_2,
              animateInterval: null,
            },
          ],
        },
      ])
    );
  }),

  rest.patch("/api/projects/0/status", async (_, res, ctx) => {
    return res(ctx.status(httpStatus.OK));
  }),

  rest.post("/api/auth/forgot-password/:email", async (req, res, ctx) => {
    if (req.params.email === INVALID_USER.email) {
      return res(ctx.status(httpStatus.NOT_FOUND));
    } else if (req.params.email === VALID_USER.email) {
      return res(ctx.status(httpStatus.OK));
    }
  }),
];

export { handlers };
